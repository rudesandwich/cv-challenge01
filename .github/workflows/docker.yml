name: Docker CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: sandwich5230/cv-challenge01

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push
        run: |
          docker build -t ${{ env.IMAGE_NAME }}-backend:latest ./backend
          docker push ${{ env.IMAGE_NAME }}-backend:latest
          
          docker build -t ${{ env.IMAGE_NAME }}-frontend:latest ./frontend
          docker push ${{ env.IMAGE_NAME }}-frontend:latest

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          
      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker pull ${{ env.IMAGE_NAME }}-backend:latest
            docker pull ${{ env.IMAGE_NAME }}-frontend:latest
            docker-compose -f docker-compose.yml -f docker-compose-monitoring.yml up -d
          EOF

      - name: Verify deployment
        run: |
          curl -s http://${{ secrets.SSH_HOST }}:8000/api/health | grep -q '"status":"ok"'
          curl -s http://${{ secrets.SSH_HOST }}:3000 | grep -q '<div id="root">'
